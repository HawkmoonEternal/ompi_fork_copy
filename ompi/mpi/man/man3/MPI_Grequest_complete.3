.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Grequest_complete" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Grequest_complete\f[] \- Reports that a generalized request is
complete.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Grequest_complete(MPI_Request\ request)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_GREQUEST_COMPLETE(REQUEST,\ IERROR)
\ \ \ \ INTEGER\ REQUEST,\ IERROR
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Grequest_complete(request,\ ierror)
\ \ \ \ TYPE(MPI_Request),\ INTENT(IN)\ ::\ request
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Input/Output Parameter
.IP \[bu] 2
\f[C]request\f[] : Generalized request (handle).
.SH Output Parameter
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Grequest_complete\f[] informs MPI that the operations
represented by the generalized request \f[C]request\f[] are complete.
A call to \f[C]MPI_Wait(request,\ status)\f[] will return, and a call to
\f[C]MPI_Test(request,\ flag,\ status)\f[] will return flag=true only
after a call to \f[C]MPI_Grequest_complete\f[] has declared that these
operations are complete.
.PP
MPI imposes no restrictions on the code executed by the callback
functions.
However, new nonblocking operations should be defined so that the
general semantic rules about MPI calls such as \f[C]MPI_Test\f[],
\f[C]MPI_Request_free\f[], or \f[C]MPI_Cancel\f[] still hold.
For example, all these calls are supposed to be local and nonblocking.
Therefore, the callback functions \f[C]query_fn\f[], \f[C]free_fn\f[],
or \f[C]cancel_fn\f[] should invoke blocking MPI communication calls
only if the context is such that these calls are guaranteed to return in
finite time.
Once \f[C]MPI_Cancel\f[] has been invoked, the canceled operation should
complete in finite time, regardless of the state of other processes (the
operation has acquired \[lq]local\[rq] semantics).
It should either succeed or fail without side\-effects.
The user should guarantee these same properties for newly defined
operations.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
