.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_File_write_shared" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_File_write_shared\f[] \- Writes a file using the shared file
pointer (blocking, noncollective).
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_File_write_shared(MPI_File\ fh,\ const\ void\ *buf,\ int\ count,
\ \ \ \ MPI_Datatype\ datatype,\ MPI_Status\ *status)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_FILE_WRITE_SHARED(FH,\ BUF,\ COUNT,\ DATATYPE,\ STATUS,\ IERROR)
\ \ \ \ <type>\ \ BUF(*)
\ \ \ \ \ \ INTEGER\ \ \ FH,\ COUNT,\ DATATYPE,\ STATUS(MPI_STATUS_SIZE),\ IERROR
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_File_write_shared(fh,\ buf,\ count,\ datatype,\ status,\ ierror)
\ \ \ \ TYPE(MPI_File),\ INTENT(IN)\ ::\ fh
\ \ \ \ TYPE(*),\ DIMENSION(..),\ INTENT(IN)\ ::\ buf
\ \ \ \ INTEGER,\ INTENT(IN)\ ::\ count
\ \ \ \ TYPE(MPI_Datatype),\ INTENT(IN)\ ::\ datatype
\ \ \ \ TYPE(MPI_Status)\ ::\ status
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Input/Output Parameter
.IP \[bu] 2
\f[C]fh\f[] : File handle (handle).
.SH Input Parameters
.IP \[bu] 2
\f[C]buf\f[] : Initial address of buffer (choice).
.IP \[bu] 2
\f[C]count\f[] : Number of elements in buffer (integer).
.IP \[bu] 2
\f[C]datatype\f[] : Data type of each buffer element (handle).
.SH Output Parameters
.IP \[bu] 2
\f[C]status\f[] : Status object (status).
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_File_write_shared\f[] is a blocking routine that uses the
shared file pointer to write files.
The order of serialization is not deterministic for this noncollective
routine.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
For MPI I/O function errors, the default error handler is set to
\f[C]MPI_ERRORS_RETURN\f[].
The error handler may be changed with \f[C]MPI_File_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_ARE_FATAL\f[] may be used
to make I/O errors fatal.
Note that MPI does not guarantee that an MPI program can continue past
an error.
