.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Get_count" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Get_count\f[] \- Gets the number of top\-level elements
received.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Get_count(const\ MPI_Status\ *status,\ MPI_Datatype\ datatype,
\ \ \ \ int\ *count)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_GET_COUNT(STATUS,\ DATATYPE,\ COUNT,\ IERROR)
\ \ \ \ INTEGER\ STATUS(MPI_STATUS_SIZE),\ DATATYPE,\ COUNT,\ IERROR
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Get_count(status,\ datatype,\ count,\ ierror)
\ \ \ \ TYPE(MPI_Status),\ INTENT(IN)\ ::\ status
\ \ \ \ TYPE(MPI_Datatype),\ INTENT(IN)\ ::\ datatype
\ \ \ \ INTEGER,\ INTENT(OUT)\ ::\ count
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]status\f[] : Return status of receive operation (status).
.IP \[bu] 2
\f[C]datatype\f[] : Datatype of each receive buffer element (handle).
.SH Output Parameters
.IP \[bu] 2
\f[C]count\f[] : Number of received elements (integer).
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
Returns the number of entries received.
(We count entries, each of type \f[C]datatype\f[], not bytes.) The
\f[C]datatype\f[] argument should match the argument provided by the
receive call that set the \f[C]status\f[] variable.
(As explained in Section 3.12.5 in the MPI\-1 Standard, \[lq]Use of
General Datatypes in Communication,\[rq] \f[C]MPI_Get_count\f[] may, in
certain situations, return the value \f[C]MPI_UNDEFINED\f[].)
.PP
The \f[C]datatype\f[] argument is passed to \f[C]MPI_Get_count\f[] to
improve performance.
A message might be received without counting the number of elements it
contains, and the \f[C]count\f[] value is often not needed.
Also, this allows the same function to be used after a call to
\f[C]MPI_Probe\f[].
.SH Notes
.PP
If the size of the \f[C]datatype\f[] is zero, this routine will return a
\f[C]count\f[] of zero.
If the amount of data in \f[C]status\f[] is not an exact multiple of the
size of \f[C]datatype\f[] (so that \f[C]count\f[] would not be
integral), a \f[C]count\f[] of \f[C]MPI_UNDEFINED\f[] is returned
instead.
.SH Errors
.PP
If the value to be returned is larger than can fit into the
\f[C]count\f[] parameter, an \f[C]MPI_ERR_TRUNCATE\f[] error is raised.
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Get_elements\f[](3)
