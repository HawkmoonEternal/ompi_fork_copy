.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Cart_sub" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Cart_sub\f[] \- Partitions a communicator into subgroups, which
form lower\-dimensional Cartesian subgrids.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Cart_sub(MPI_Comm\ comm,\ const\ int\ remain_dims[],\ MPI_Comm\ *comm_new)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_CART_SUB(COMM,\ REMAIN_DIMS,\ COMM_NEW,\ IERROR)
\ \ \ \ INTEGER\ COMM,\ COMM_NEW,\ IERROR
\ \ \ \ LOGICAL\ REMAIN_DIMS(*)
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Cart_sub(comm,\ remain_dims,\ newcomm,\ ierror)
\ \ \ \ TYPE(MPI_Comm),\ INTENT(IN)\ ::\ comm
\ \ \ \ LOGICAL,\ INTENT(IN)\ ::\ remain_dims(*)
\ \ \ \ TYPE(MPI_Comm),\ INTENT(OUT)\ ::\ newcomm
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]comm\f[] : Communicator with Cartesian structure (handle).
.IP \[bu] 2
\f[C]remain_dims\f[] : The ith entry of \f[C]remain_dims\f[] specifies
whether the ith dimension is kept in the subgrid (true) or is dropped
(false) (logical vector).
.SH Output Parameters
.IP \[bu] 2
\f[C]comm_new\f[] : Communicator containing the subgrid that includes
the calling process (handle).
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
If a Cartesian topology has been created with \f[C]MPI_Cart_create\f[],
the function \f[C]MPI_Cart_sub\f[] can be used to partition the
communicator group into subgroups that form lower\-dimensional Cartesian
subgrids, and to build for each subgroup a communicator with the
associated subgrid Cartesian topology.
(This function is closely related to \f[C]MPI_Comm_split\f[].)
.PP
Example: Assume that \f[C]MPI_Cart_create(\ ...,\ comm)\f[] has defined
a (2 x 3 x 4) grid.
Let \f[C]remain_dims\f[] = (true, false, true).
Then a call to
.IP
.nf
\f[C]
MPI_Cart_sub(comm,\ remain_dims,\ comm_new)
\f[]
.fi
.PP
will create three communicators, each with eight processes in a 2 x 4
Cartesian topology.
If \f[C]remain_dims\ =\ (false,\ false,\ true)\f[] then the call to
\f[C]MPI_Cart_sub(comm,\ remain_dims,\ comm_new)\f[] will create six
nonoverlapping communicators, each with four processes, in a
one\-dimensional Cartesian topology.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Cart_create\f[](3) \f[C]MPI_Comm_split\f[](3)
