.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Comm_disconnect" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Comm_disconnect\f[] \- Deallocates communicator object and sets
handle to \f[C]MPI_COMM_NULL.\f[]
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Comm_disconnect(MPI_Comm\ *comm)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_COMM_DISCONNECT(COMM,\ IERROR)
\ \ \ \ INTEGER\ COMM,\ IERROR\ 
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Comm_disconnect(comm,\ ierror)
\ \ \ \ TYPE(MPI_Comm),\ INTENT(INOUT)\ ::\ comm
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SS Input/Output Parameter
.IP \[bu] 2
\f[C]comm\f[] : Communicator (handle).
.SH Output Parameter
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
\f[C]MPI_Comm_disconnect\f[] waits for all pending communication on
\f[C]comm\f[] to complete internally, deallocates the communicator
object, and sets the handle to \f[C]MPI_COMM_NULL\f[].
It is a collective operation.
It may not be called with the communicator \f[C]MPI_COMM_WORLD\f[] or
\f[C]MPI_COMM_SELF.\f[] \f[C]MPI_Comm_disconnect\f[] may be called only
if all communication is complete and matched, so that buffered data can
be delivered to its destination.
This requirement is the same as for \f[C]MPI_Finalize.\f[]
\f[C]MPI_Comm_disconnect\f[] has the same action as
\f[C]MPI_Comm_free\f[], except that it waits for pending communication
to finish internally and enables the guarantee about the behavior of
disconnected processes.
.SH Notes
.PP
To disconnect two processes you may need to call
\f[C]MPI_Comm_disconnect,\f[] \f[C]MPI_Win_free\f[], and
\f[C]MPI_File_close\f[] to remove all communication paths between the
two processes.
Note that it may be necessary to disconnect several communicators (or to
free several windows or files) before two processes are completely
independent.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Comm_connect\f[](3) \f[C]MPI_Comm_accept\f[](3)
