.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Cart_rank" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Cart_rank\f[] \- Determines process rank in communicator given
Cartesian location.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Cart_rank(MPI_Comm\ comm,\ int\ coords[],\ int\ *rank)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_CART_RANK(COMM,\ COORDS,\ RANK,\ IERROR)
\ \ \ \ INTEGER\ COMM,\ COORDS(*),\ RANK,\ IERROR
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Cart_rank(comm,\ coords,\ rank,\ ierror)
\ \ \ \ TYPE(MPI_Comm),\ INTENT(IN)\ ::\ comm
\ \ \ \ INTEGER,\ INTENT(IN)\ ::\ coords(*)
\ \ \ \ INTEGER,\ INTENT(OUT)\ ::\ rank
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Input Parameters
.IP \[bu] 2
\f[C]comm\f[] : Communicator with Cartesian structure (handle).
.IP \[bu] 2
\f[C]coords\f[] : Integer array (of size ndims, which was defined by
\f[C]MPI_Cart_create\f[] call) specifying the Cartesian coordinates of a
process.
.SH Output Parameter
.IP \[bu] 2
\f[C]rank\f[] : Rank of specified process (integer).
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
For a process group with Cartesian structure, the function
\f[C]MPI_Cart_rank\f[] translates the logical process coordinates to
process \f[C]rank\f[]s as they are used by the point\-to\-point
routines.
For dimension i with periods(i) = true, if the coordinate,
\f[C]coords(i)\f[], is out of range, that is, \f[C]coords(i)\f[] < 0 or
\f[C]coords(i)\f[] >= \f[C]dims(i)\f[], it is shifted back to the
interval 0 =< \f[C]coords(i)\f[] < \f[C]dims(i)\f[] automatically.
Out\-of\-range coordinates are erroneous for nonperiodic dimensions.
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
.SH See Also
.PP
\f[C]MPI_Cart_create\f[](3)
