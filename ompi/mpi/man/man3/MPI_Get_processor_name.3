.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "MPI_Get_processor_name" "3" "" "2022\-07\-05" "Open MPI"
.hy
.SH Name
.PP
\f[C]MPI_Get_processor_name\f[] \- Gets the name of the processor.
.SH Syntax
.SS C Syntax
.IP
.nf
\f[C]
#include\ <mpi.h>

int\ MPI_Get_processor_name(char\ *name,\ int\ *resultlen)
\f[]
.fi
.SS Fortran Syntax
.IP
.nf
\f[C]
USE\ MPI
!\ or\ the\ older\ form:\ INCLUDE\ \[aq]mpif.h\[aq]

MPI_GET_PROCESSOR_NAME(NAME,\ RESULTLEN,\ IERROR)
\ \ \ \ CHARACTER*(*)\ \ \ NAME
\ \ \ \ INTEGER\ \ \ \ \ RESULTLEN,\ IERROR
\f[]
.fi
.SS Fortran 2008 Syntax
.IP
.nf
\f[C]
USE\ mpi_f08

MPI_Get_processor_name(name,\ resultlen,\ ierror)
\ \ \ \ CHARACTER(LEN=MPI_MAX_PROCESSOR_NAME),\ INTENT(OUT)\ ::\ name
\ \ \ \ INTEGER,\ INTENT(OUT)\ ::\ resultlen
\ \ \ \ INTEGER,\ OPTIONAL,\ INTENT(OUT)\ ::\ ierror
\f[]
.fi
.SH Output Parameters
.IP \[bu] 2
\f[C]name\f[] : A unique specifier for the actual (as opposed to
virtual) node.
.IP \[bu] 2
\f[C]resultlen\f[] : Length (in characters) of result returned in name.
.IP \[bu] 2
\f[C]IERROR\f[] : Fortran only: Error status (integer).
.SH Description
.PP
This routine returns the \f[C]name\f[] of the processor on which it was
called at the moment of the call.
The \f[C]name\f[] is a character string for maximum flexibility.
From this value it must be possible to identify a specific piece of
hardware.
The argument \f[C]name\f[] must represent storage that is at least
\f[C]MPI_MAX_PROCESSOR_NAME\f[] characters long.
.PP
The number of characters actually written is returned in the output
argument, \f[C]resultlen\f[].
.SH Notes
.PP
The user must provide at least \f[C]MPI_MAX_PROCESSOR_NAME\f[] space to
write the processor \f[C]name\f[]; processor \f[C]name\f[]s can be this
long.
The user should examine the output argument, \f[C]resultlen\f[], to
determine the actual length of the \f[C]name\f[].
.SH Errors
.PP
Almost all MPI routines return an error value; C routines as the value
of the function and Fortran routines in the last argument.
.PP
Before the error value is returned, the current MPI error handler is
called.
By default, this error handler aborts the MPI job, except for I/O
function errors.
The error handler may be changed with \f[C]MPI_Comm_set_errhandler\f[];
the predefined error handler \f[C]MPI_ERRORS_RETURN\f[] may be used to
cause error values to be returned.
Note that MPI does not guarantee that an MPI program can continue past
an error.
